name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: docker.io

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/namaste-web
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/namaste-web:latest
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to DigitalOcean App Platform
        uses: digitalocean/app_action/deploy@v2
        env:
          SAMPLE_DIGEST: ${{ needs.build.outputs.digest }}
          # Pass all secrets as environment variables
          MONGODB_URI: ${{ secrets.SPRING_DATA_MONGODB_URI }}
          ABHA_CLIENT_ID: ${{ secrets.ABHA_CLIENT_ID }}
          ABHA_CLIENT_SECRET: ${{ secrets.ABHA_CLIENT_SECRET }}
          ABHA_X_HIP_ID: ${{ secrets.ABHA_X_HIP_ID }}
          ABHA_AUTH_TOKEN: ${{ secrets.ABHA_AUTH_TOKEN }}
          SPRING_USER_NAME: ${{ secrets.SPRING_SECURITY_USER_NAME }}
          SPRING_USER_PASSWORD: ${{ secrets.SPRING_SECURITY_USER_PASSWORD }}
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
